import tkinter as tk
from tkinter import *
import random
from PIL import ImageTk, Image, ImageDraw, ImageFont
player_score = 0
computer_score = 0
empate_score = 0

def _from_rgb(rgb):
    r, g, b = rgb
    return f'#{r:02x}{g:02x}{b:02x}'

def update_windows():
    for i in start_window.winfo_children():
        i.destroy()

def start_game():
    global player_symbol, computer_symbol, turn
    selected_option = selected.get()
    if selected_option == "X":
        player_symbol = "x"
        computer_symbol = "o"
    else:
        player_symbol = "o"
        computer_symbol = "x"
    turn = player_symbol
    update_windows()
    game_window()

def reoundedButton(width, height, radius, color, text, text_color, font_size):
    image = Image.new("RGBA", (width, height,), (0,0,0,0))
    draw = ImageDraw.Draw(image)
    draw.rounded_rectangle((0,0, width, height), radius=radius, fill=color)
    font = ImageFont.load_default()
    text_width, text_height = draw.textbbox(text, font=font)
    text_x = (width - text_width) / 2
    text_y = (height - text_height) / 2

    draw.text((text_x, text_y), text, fill=text_color, font=font)
    
    return ImageTk.PhotoImage(image)

def game_window():
    global frame1, frame2, titleLabel, buttons, game_end, turn, player_symbol, computer_symbol, board, player_score, computer_score, empate_score

    frame1 = Frame(start_window, bg=_from_rgb((70, 70, 70)), relief=FLAT, bd=0)
    frame1.pack()
    titleLabel = Label(frame1 , text="Tic Tac Toe" , font=("Arial" , 26) , bg=_from_rgb((70, 70, 70)) , width=27, fg="white")
    titleLabel.grid(row=0 , column=0)
    start_window.configure(bg=_from_rgb((50, 50, 50)))
    frame2 = Frame(start_window , bg=_from_rgb((50, 50, 50)), bd=0, highlightbackground = "white", highlightthickness=5, relief=FLAT, border=5, borderwidth=5)
    frame2.pack(pady=25)
    board = { 1:" " , 2:" " , 3:" ",
              4:" " , 5:" " , 6:" ",
              7:" " , 8:" " , 9:" " }

    game_end = False

    def updateBoard():
        for key in board.keys():
            buttons[key-1]["text"] = board[key]
                
    def updateButton(b, info):
        b.config(text=info, font=("Arial", 30), width=5, height=2)
            
    def checkForWin(player):
        # rows
        if board[1] == board[2] and board[2] == board[3] and board[3] == player:
            return True

        elif board[4] == board[5] and board[5] == board[6] and board[6] == player:
            return True

        elif board[7] == board[8] and board[8] == board[9] and board[9] == player:
            return True

        # columns
        elif board[1] == board[4] and board[4] == board[7] and board[7] == player:
            return True

        elif board[2] == board[5] and board[5] == board[8] and board[8] == player:
            return True

        elif board[3] == board[6] and board[6] == board[9] and board[9] == player:
            return True

        # diagonals
        elif board[1] == board[5] and board[5] == board[9] and board[9] == player:
            return True

        elif board[3] == board[5] and board[5] == board[7] and board[7] == player:
            return True

        return False

    def resetGame():
        global game_end, board, turn
        game_end = False
        titleLabel = Label(frame1, text="Tic Tac Toe", font=("Arial", 26), bg=_from_rgb((70, 70, 70)), width=27,
                           fg="white")
        titleLabel.grid(row=0, column=0)
        board = {fj: " " for fj in range(1, 10)}  # Reiniciar el tablero
        updateBoard()  # Actualizar la interfaz
        titleLabel.config(text="Tic Tac Toe")
        turn = player_symbol

    def checkForDraw():
        for fj in board.keys():
            if board[fj] == " ":
                return False
        return True
    
    def minimax(board, isMaximizing):
        if checkForWin(computer_symbol):
            return 1
        
        if checkForWin(player_symbol):
            return -1
        
        if checkForDraw():
            return 0
        
        if isMaximizing:
            bestScore = -100
            for key in board.keys():
                if board[key] == " ":
                    board[key] = computer_symbol
                    score = minimax(board, False)  # minimax
                    board[key] = " "
                    if score > bestScore:
                        bestScore = score
            return bestScore
        else:
            bestScore = 100
            for key in board.keys():
                if board[key] == " ":
                    board[key] = player_symbol
                    score = minimax(board, True)  # minimax
                    board[key] = " "
                    if score < bestScore:
                        bestScore = score
            return bestScore
    
    def hardComputer():
        bestScore = -100
        bestMove = 0
        for key in board.keys():
            if board[key] == " ":
                board[key] = computer_symbol
                score = minimax(board, False)  # minimax
                board[key] = " "
                if score > bestScore:
                    bestScore = score
                    bestMove = key
        board[bestMove] = computer_symbol
        updateBoard()

    def playComputer():
        while True:
            r = random.randrange(1, len(board.keys()))
            if board[r] == " ":
                board[r] = computer_symbol
                if buttons[r-1]["text"] == " ":
                    updateButton(buttons[r-1], computer_symbol)
                    break
                    
    def play(event):
        global turn, game_end, player_score, computer_score, empate_score
        tmp = None
        if game_end:
            return
        
        button = event.widget
        button_index = buttons.index(button) + 1
        
        if button["text"] == " ":
            board[button_index] = turn
            updateButton(button, turn)
            updateBoard()
            if checkForWin(turn):
                if turn == player_symbol:
                    player_score += 1
                else:
                    computer_score += 1
                update_score_label()
                if turn == "x":
                    tmp = "X"
                else:
                    tmp = "O"
                winningLabel = Label(frame1, text=f"{tmp} ha ganado. ¡Felicidades!", font=("Arial", 26), width=20, bg=_from_rgb((70,70,70)), fg="white")
                winningLabel.grid(row=0, column=0, columnspan=3)
                game_end = True
            elif checkForDraw():
                empate_score += 1
                update_score_label()
                drawLabel = Label(frame1, text=f"¡Ha sido un empate!", font=("Arial", 26), width=20, bg=_from_rgb((70,70,70)), fg="white")
                drawLabel.grid(row=0, column=0, columnspan=3)
                game_end = True
            else:
                turn = computer_symbol if turn == player_symbol else player_symbol
                if turn == computer_symbol and not game_end:
                    playComputer()
                    if checkForWin(turn):
                        computer_score += 1
                        update_score_label()
                        if turn == "X":
                            tmp = "X"
                        elif turn == "O":
                            tmp = "O"
                        winningLabel = Label(frame1, text=f"{tmp} ha ganado. ¡Felicidades!", font=("Arial", 26), width=20, bg=_from_rgb((70,70,70)), fg="white")
                        winningLabel.grid(row=0, column=0, columnspan=3)
                        game_end = True
                    turn = player_symbol
                    updateBoard()
    def update_score_label():
        score_label.config(text=f"Jugador: {player_score} - Computadora: {computer_score} - Empates: {empate_score}")
    buttons = []
    for i in range(3):
        for j in range(1, 4):
            button = Button(frame2, text=" ", width=5, height=2, font=("Arial", 30), bg="white", highlightbackground="white", highlightthickness=2)
            button.grid(row=i, column=j, pady=5, padx=5)
            button.bind("<Button-1>", play)
            buttons.append(button)
    frame3 = Frame(start_window , bg=_from_rgb((70,70,70)), bd=0, relief=FLAT)
    frame3.pack()
    restartButton = Button(frame3 , text="Reiniciar" , width=19 , height=1 , font=("Arial" , 20) , bg=_from_rgb((70, 70, 70)) , relief=RAISED , borderwidth=5 , command=resetGame, fg="white", activeforeground="white", activebackground=_from_rgb((70, 70, 70)))
    restartButton.grid(row=4 , column=1 , columnspan=3)
    score_label = Label(frame1, text=f"Jugador: {player_score} - Computadora: {computer_score} - Empates: {empate_score}", font=("Arial", 16), bg=_from_rgb((70, 70, 70)), fg="white")
    score_label.grid(row=1, column=0)

start_window = tk.Tk()
start_window.geometry("550x630")
start_window.title("Ventana de Inicio")
start_window.maxsize(None)

image = reoundedButton(100, 50, 25, _from_rgb((255, 255, 255)), "X", "black", 20)
label = tk.Label(start_window, text="Bienvenido al Juego", font=("Helvetica", 16))
label.pack(pady=20)
selected = tk.StringVar(value="X")
x_radio = tk.Button(start_window, text="O", font=("Helvetica", 12))
x_radio.pack(pady=20)
o_radio = tk.Button(start_window, text="O", font=("Helvetica", 12))
o_radio.pack(pady=20)

start_button = tk.Button(start_window, text="Comenzar", command=start_game, font=("Helvetica", 12), bg="yellow")
start_button.pack(pady=10)

start_window.mainloop()
